<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {{!-- <meta http-equiv="refresh" content="5"> --}}

    <title>Vintage Addiction</title>
    <link rel="stylesheet" href="stylesheets/css.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet">
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-bold-rounded/css/uicons-bold-rounded.css'>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js" integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N" crossorigin="anonymous"></script>
</head>

<body style="background-image: url(https://cdn.discordapp.com/attachments/891271708160438283/1093958378809733120/bg-dash.jpg);">

<header>
  <nav class="navbar bg-body-tertiary fixed-top " style="background-color: #480b97 !important;">
    <div class="container col-12 col-md-12 col-lg-12 col-xl-12">
      <a class="navbar-brand" href="/"><img class="logo" src="images/logo.png"/></a>
      <a onclick="logOut()" class="nav-link" href="/logout"><i class="fi fi-br-address-card white" style="font-size:28px;"></i></a>
    </div>
  </nav>
</header>


<div class="container" style="margin-top:200px;">

  <div class="row" >
    <div class="col">
      <h1 id="room" class="text-center white"></h1>
    </div>
  </div>
  <div class="row center players" >
    <div class="col-5 text-center">
      <img  id="player1Avatar"  style="width:130px;border-radius: 15px;" alt="Player 1 Avatar"  />
      <h3  id="player1User" class="text-center white p-4" alt="Player 1 User"></h3>
    </div>
    <div class="col-2 text-center">
      <h3 class="white" alt="vs">VS</h3>
    </div>
    <div class="col-5 text-center">
      <img  src="images/question.png" id="player2Avatar"  style="width: 130px;" alt="Avatar"  />
      <h3  id="player2User" class="text-center white p-4" alt="Player 2 User">(waiting for player)</h3>
    </div>
  </div>
</div>
</div>

<script>

    
    
    //Refresh page every 5 seconds.
    autoRefreshePage();

    
    //Personalize room with cookie data
    decodedCookie = decodeURIComponent(document.cookie.split('=')[1]);
    decodedCookie = decodedCookie.split('j:')[1];

    //console.log( decodedCookie );
    const obj = JSON.parse( decodedCookie );    
       
    const room = Object.keys(obj)[0];
    const playersNumber = obj[room].length;

    const player1Avatar = obj[room][0].avatar;
    const player1User = obj[room][0].player;

    document.getElementById( "room" ).innerHTML = 'Welcome to ' + room;
    document.getElementById( "player1Avatar" ).src = player1Avatar;  
    document.getElementById( "player1User" ).innerHTML = player1User;

    //Case 2 players in room
    if ( playersNumber == 2 )
    {
      const player2Avatar = obj[room][1].avatar;
      const player2User = obj[room][1].player;
      document.getElementById( "player2Avatar" ).src = player2Avatar;        
      document.getElementById( "player2User" ).innerHTML = player2User;
      startWsGame(player1User, player2User);
      
  
    }
    //console.log(room, player1Avatar, player1User, playersNumber );

    //Set cookie in localStorage
    localStorage.setItem( 'roominfo', decodedCookie );


    function autoRefreshePage() 
    {
      window.setTimeout( function() {
      window.location.reload();
      }, 5000);
    }


    //Logout function
    function logOut() 
    {
      localStorage.clear();    
      location.replace("/logout")
    }


    //Game Data exchange via WebSockets
    function startWsGame(player1User, player2User)
    {
      
      let roomInfo = JSON.parse(localStorage.getItem('roominfo'));
      //let roomNumber = Object.keys(roomInfo)[0];
      let player1Name = player1User;
      let player1Score = ['a1', 'a2', 'b1', 'b2'];
      let player2Name = player2User;
      let player2Score = ['a3', 'b4', 'c2', 'c4', 'c1'];
      //let player2Score = ['a1', 'a2', 'b1', 'b2', 'b3','b4', 'c2', 'c4', 'c1'];      

      let game = {
        roomInfo: roomInfo, 
        player1: {
          name: player1Name,
          score: player1Score
          },         
        player2: {
          name: player2Name,
          score: player2Score
          },
        status: null
      }
      
      const ws = new WebSocket("ws://localhost:8080");
      ws.addEventListener("open", () =>{                
        ws.send(JSON.stringify(game));
        console.log('Enviado JSON al Server:');
        console.log(JSON.stringify(game));
      });
  
      ws.addEventListener('message', (event) => {
          console.log('Recibido JSON del Server:')
          console.log(event.data);
          let obj =JSON.parse(event.data)
          //Trigger end game
          if (obj.status == false)            
            { 
              console.log('JUEGO TERMINADO!!!!');
              console.log(JSON.stringify(obj));
              //set "winner-flag" in local storage
              localStorage.setItem('winnerflag', getWinner(obj));
              //redirect results page
              window.location.replace('/results');

            }            
      });
    }

    //Function to determine winner when the game over.
    function getWinner(gameData)
    {
        let score1 = gameData.player1.score.length;
        let score2 = gameData.player2.score.length;

        if ( score1 > score2)
            { return gameData.player1.name; }
        if ( score2 > score1)
            { return gameData.player2.name; }   
        
    }


    //post Data Function for results page
    //function postResults(gameData) 
    //{
    //  var xhr = new XMLHttpRequest();
    //  var url = "/results";
    //  xhr.open("POST", url, true);
    //  xhr.setRequestHeader("Content-Type", "application/json");
    //xhr.onreadystatechange = function () {
    //    if (xhr.readyState === 4 && xhr.status === 200) {
    //        var json = JSON.parse(xhr.responseText);
             //console.log(json.email + ", " + json.password);
    //    }
    //};            
    //xhr.send(gameData);
    //}

    

</script>


</body>
</html>

